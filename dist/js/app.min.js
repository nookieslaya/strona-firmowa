"use strict";function _createForOfIteratorHelper(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0,t=function(){};return{s:t,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:t}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,o=!0,a=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return o=e.done,e},e:function(e){a=!0,i=e},f:function(){try{o||null==n.return||n.return()}finally{if(a)throw i}}}}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Map"===(n="Object"===n&&e.constructor?e.constructor.name:n)||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(e,t):void 0}}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),e}var navMenu=document.getElementById("nav-menu"),toggleMenu=document.getElementById("nav-toggle"),closeMenu=document.getElementById("nav-close"),footerYear=document.querySelector(".footer__year");toggleMenu.addEventListener("click",function(){navMenu.classList.toggle("show")}),closeMenu.addEventListener("click",function(){navMenu.classList.remove("show")});var navLink=document.querySelectorAll(".nav__link");function linkAction(){navLink.forEach(function(e){return e.classList.remove("active")}),this.classList.add("active"),navMenu.classList.remove("show")}navLink.forEach(function(e){return e.addEventListener("click",linkAction)});var TypeWriter=function(){function r(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:1e3;_classCallCheck(this,r),this.txtElement=e,this.words=t,this.txt="",this.wordIndex=0,this.wait=parseInt(n,10),this.type(),this.isDeleting=!1}return _createClass(r,[{key:"type",value:function(){var e=this,t=this.wordIndex%this.words.length,n=this.words[t];this.isDeleting?this.txt=n.substring(0,this.txt.length-1):this.txt=n.substring(0,this.txt.length+1),this.txtElement.innerHTML='<span class="txt">'.concat(this.txt,"</span>");t=100;this.isDeleting&&(t/=2),this.isDeleting||this.txt!==n?this.isDeleting&&""===this.txt&&(this.isDeleting=!1,this.wordIndex++,t=500):(t=this.wait,this.isDeleting=!0),setTimeout(function(){return e.type()},t)}}]),r}();function init(){var e=document.querySelector(".txt-type"),t=JSON.parse(e.getAttribute("data-words")),n=e.getAttribute("data-wait");new TypeWriter(e,t,n)}document.addEventListener("DOMContentLoaded",init);var accordion=document.querySelector(".accordion"),accordionBtns=document.querySelectorAll(".accordion-btn");function openAccordionItems(){this.nextElementSibling.classList.contains("active")?this.nextElementSibling.classList.remove("active"):(closeAccordionItem(),this.nextElementSibling.classList.toggle("active"))}var closeAccordionItem=function(){document.querySelectorAll(".accordion-info").forEach(function(e){return e.classList.remove("active")})},clickOutsideAccordion=function(e){e.target.classList.contains("accordion-btn")||e.target.classList.contains("accordion-info")||e.target.classList.contains("accordion-info-text")||closeAccordionItem()};accordionBtns.forEach(function(e){return e.addEventListener("click",openAccordionItems)}),window.addEventListener("click",clickOutsideAccordion);var formPages=document.querySelectorAll(".page"),steps=document.querySelectorAll(".step"),progressBar=document.querySelector(".progress-bar"),prevBtn=document.querySelector(".btn-prev"),nextBtn=document.querySelector(".btn-next"),currentStep=1,handleNextBtn=function(){++currentStep>steps.length&&(currentStep=steps.length),handleProgressBar()},handlePrevBtn=function(){--currentStep<1&&(currentStep=1),handleProgressBar()},handleProgressBar=function(){steps.forEach(function(e,t){t<currentStep?e.classList.add("active-step"):e.classList.remove("active-step")});var e=document.querySelectorAll(".active-step");progressBar.style.width=(e.length-1)/(steps.length-1)*100+"%",handleButtons(),handleFormPage()},handleButtons=function(){1===currentStep?prevBtn.disabled=!0:currentStep===steps.length?nextBtn.disabled=!0:(prevBtn.disabled=!1,nextBtn.disabled=!1)},handleFormPage=function(){formPages.forEach(function(e){currentStep==e.dataset.number?e.classList.add("active-page"):e.classList.remove("active-page")})};nextBtn.addEventListener("click",handleNextBtn),prevBtn.addEventListener("click",handlePrevBtn),function(){function s(e){null!==(e=e.nextElementSibling)&&e.classList.contains("form-error-text")&&e.remove()}function c(e,t){null!==(e=e.nextElementSibling)&&e.classList.contains("form-error-text")&&(e.style.display=t?"block":"none",e.setAttribute("aria-hidden",t))}function l(e,t){t?e.classList.add("field-error"):(e.classList.remove("field-error"),c(e,!1))}var d=document.querySelector("#contactForm"),u=d.querySelectorAll("[required]");d.setAttribute("novalidate",!0);var e,t=_createForOfIteratorHelper(u);try{for(t.s();!(e=t.n()).done;)e.value.addEventListener("input",function(e){return l(e.target,!e.target.checkValidity())})}catch(e){t.e(e)}finally{t.f()}d.addEventListener("submit",function(e){e.preventDefault();var t,n=_createForOfIteratorHelper(u);try{for(n.s();!(t=n.n()).done;){var r=t.value;s(r),r.classList.remove("field-error"),r.checkValidity()||(function(e,t){s(e);var n=document.createElement("div");n.classList.add("form-error-text"),n.innerText=t,null===e.nextElementSibling?e.parentElement.appendChild(n):e.nextElementSibling.classList.contains("form-error-text")||e.parentElement.insertBefore(n,e.nextElementSibling)}(r,r.dataset.errorText),r.classList.add("field-error"),formHasErrors=!0)}}catch(e){n.e(e)}finally{n.f()}var o=d.querySelector("[type=submit]");o.disabled=!0,o.classList.add("loading");var i=new FormData(d),a=d.getAttribute("action"),e=d.getAttribute("method");fetch(a,{method:e.toUpperCase(),body:i}).then(function(e){return e.json()}).then(function(e){if(e.errors){var t,n=e.errors.map(function(e){return'[name="'.concat(e,'"]')}),r=_createForOfIteratorHelper(d.querySelectorAll(n.join(",")));try{for(r.s();!(t=r.n()).done;){var i=t.value;l(i,!0),c(i,!0)}}catch(e){r.e(e)}finally{r.f()}}else"ok"===e.status&&((n=document.createElement("div")).classList.add("form-send-success"),n.innerText="Wysłanie wiadomości się nie powiodło",d.parentElement.insertBefore(n,d),n.innerHTML="\n                            <strong>Wiadomość została wysłana</strong>\n                            <span>Dziękujemy za kontakt. Postaram się odpowiedzieć jak najszybciej</span>\n                        ",d.remove()),"error"===e.status&&((e=document.querySelector(".form-send-error"))&&e.remove(),(e=document.createElement("div")).classList.add("form-send-error"),e.innerText="Wysłanie wiadomości się nie powiodło",o.parentElement.appendChild(e))}).finally(function(){o.disabled=!1,o.classList.remove("loading")})})}();var handleCurrentYear=function(){var e=(new Date).getFullYear();footerYear.innerText=e};handleCurrentYear();var sr=ScrollReveal({distance:"100px",duration:2e3,delay:200});sr.reveal(".header__container"),sr.reveal(".header__text",{delay:400,origin:"top"}),sr.reveal(".about__text-container",{interval:100,origin:"left"}),sr.reveal(".about__img",{interval:100,origin:"bottom"}),sr.reveal(" .product",{interval:100,origin:"top"}),sr.reveal(".card1,.accordion-btn",{interval:100,origin:"left"}),sr.reveal(".btn-acc,.ask1",{interval:100,origin:"left"}),sr.reveal(".form,.card3,.ask3 ",{origin:"bottom"}),sr.reveal(".contact__container",{origin:"left"}),sr.reveal(".card2,.ask2,.ask4",{origin:"top"}),sr.reveal(".about__title,\n.question__title,\n.offer__title,\n.steps__title,\n.contact__title,\n.products__title",{delay:200});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
